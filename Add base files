As a final setup step, we'll add our base website files and push them to the shared repo. For these commands, we're still working in the Bob directory.

Create some files by running the Linux touch command, and then stage and commit them by using Git:

Bash

Copy
touch index.html
mkdir Assets
touch Assets/site.css
git add .
git commit -m "Create empty index.html and site.css files"

Now, add some HTML to your file by using the Cloud Shell code editor. You can open the editor by running the code command. Open index.html in the online editor by entering code index.html at the terminal prompt:

Bash

Copy
code index.html

Paste in this HTML code:

HTML

Copy
<!DOCTYPE html>
<html>
  <head>
    <meta charset='UTF-8'>
    <title>Our Feline Friends</title>
    <link rel="stylesheet" href="CSS/site.css">
  </head>
  <body>
    <nav><a href="./index.html">home</a></nav>
    <h1>Our Feline Friends</h1>
    <p>Eventually we will put cat pictures here.</p>
    <footer><hr>Copyright (c) 2021 Contoso Cats</footer>
  </body>
</html>
Save the file, and close the editor. You can select the ellipsis "..." in the right corner of the editor, or use the accelerator key (press Ctrl+S on Windows and Linux; press Cmd+S on macOS).

Change to the Assets directory, and then open site.css in the editor:

Bash

Copy
cd Assets
code site.css

Add the following CSS to the file:

css

Copy
h1, h2, h3, h4, h5, h6 { font-family: sans-serif; }
body { font-family: serif; background-color: #F0FFF8; }
nav, footer { background-color: #C0D8DF; }
Save the file and close the editor.

Go back to the Bob directory, and commit again:

Bash

Copy
cd ..
git add .
git commit -m "Add simple HTML and stylesheet"
git push --set-upstream origin main

 Note

Because we are using a different default branch name, you have to tell git to associate your main branch to the main branch of the source repository.

Check the output. If you see a warning like this example, don't worry. This warning is just letting users know about a change to Git's default behaviors.

Output

Copy
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, run:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)
If you'd like to make sure you don't see this warning again, you can run this command:

Bash

Copy
git config --global push.default simple

Check the output for this indicator of success:

Output

Copy
Counting objects: 9, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 953 bytes | 953.00 KiB/s, done.
Total 9 (delta 0), reused 0 (delta 0)
To ../Shared.git
 * [new branch]      main -> main
